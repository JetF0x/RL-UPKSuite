using Xunit;
using Core.Types.PackageTables;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using FluentAssertions;

namespace Core.Types.PackageTables.Tests
{
    public class ImportTableTests
    {
        private readonly byte[] _importData =
        {
            0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xFC, 0xFF, 0xFF, 0xFF, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFB, 0xFF, 0xFF, 0xFF,
            0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFA, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
        };

        private const int ImportCount = 6;

        private readonly List<ImportTableItem> _importTableItems;

        public ImportTableTests()
        {
            _importTableItems = new List<ImportTableItem>
            {
                new(new FName(2), new FName(1), new ObjectIndex(-4), new FName(6)),
                new(new FName(2), new FName(1), new ObjectIndex(-5), new FName(5)),
                new(new FName(2), new FName(1), new ObjectIndex(-6), new FName(7)),
                new(new FName(2), new FName(6), new ObjectIndex(0), new FName(2)),
                new(new FName(2), new FName(6), new ObjectIndex(0), new FName(3)),
                new(new FName(2), new FName(6), new ObjectIndex(0), new FName(12))
            };
        }


        [Fact()]
        public void ImportTableTest_FromStream_RightImports()
        {
            // Arrange
            var stream = new MemoryStream(_importData);
            // Act
            var importTable = new ImportTable(stream, 0, ImportCount);
            // Assert 
            importTable.Imports.Should().BeEquivalentTo(_importTableItems);
        }

        [Fact()]
        public void ImportTableTest_Serialize_RightBytes()
        {
            // Arrange
            var stream = new MemoryStream();
            // Act
            var importTable = new ImportTable(_importTableItems);
            importTable.Serialize(stream);
            var streamBuffer = new ArraySegment<byte>(stream.GetBuffer(), 0, (int) stream.Length);
            // Assert 
            streamBuffer.Should().BeEquivalentTo(_importData);
        }
    }
}